.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "SATATTACK" "1" "September 27, 2023" "satAttack 0.0.7" "User Manual"
.hy
.SH NAME
.PP
satAttack - A SAT attack program, developed for launching SAT attacks on
UTD\[cq]s TRAnsistor-level Programmable (TRAP) fabric.
.SH SYNOPSIS
.PP
\f[B]satAttack\f[R] [\f[I]OPTION\f[R]] encryptedZ3PyFile inputList
keyList outputList oracleNetlist topLevelModule
.SH DESCRIPTION
.PP
\f[B]satAttack\f[R] runs a SAT attack on an encrypted Z3Py netlist,
using a provided oracle netlist.
.SH OPTIONS
.TP
\f[B]-h\f[R], \f[B]\[en]help\f[R]
Display help message.
.TP
\f[B]-f\f[R], \f[B]\[en]fresh\f[R]
Creates fresh directories for all script outputs.
WARNING: deletes prexisting directories.
.TP
\f[B]-q\f[R], \f[B]\[en]quiet\f[R]
Stops printing of SAT attack results to terminal.
Recommended when optimizing runtime or for attacks with many keys.
.TP
\f[B]-z\f[R],
Enables the SAT attack to consider outputs that may have high-impedance
functionality.
May be needed for proper attack on circuits that have tri-state outputs
or
transistor-level behavior (like T-gates).
Expects a text file containing names of \[lq]hiZ output\[rq] variables,
separated by whitespaces.
.SH EXAMPLES
.TP
\f[B]satAttack plFile.py ins.txt keys.txt outs.txt oracle.v topName -f\f[R]
Runs a SAT attack on the encrypted circuit described in plFile.py,
against the oracle \[lq]topName\[rq] described in oracle.v.
.TP
\f[B]inputList.txt for N-input circuit\f[R]
a b c \&... inN
.TP
\f[B]keylist.txt for M-key circuit\f[R]
k1 k2 k3 \&... kM
.TP
\f[B]outputList.txt for P-output circuit\f[R]
O z circOut sum \&... outP
.TP
\f[B]matching hiZoutputList.txt for example outputList.txt\f[R]
O : vO
.PD 0
.P
.PD
z : vz
.PD 0
.P
.PD
circOut : vcircOut
.PD 0
.P
.PD
sum : vsum
.SH AUTHORS
.PP
Written by Aric Fowler
.SH BUGS
.PP
Submit bug reports online at:
<https://github.com/aric-fowler/STRAPT/issues>
.SH SEE ALSO
.PP
Full documentation and sources at:
<https://github.com/aric-fowler/STRAPT>
