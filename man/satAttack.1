.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "SATATTACK" "1" "November 13, 2023" "satAttack 0.1.0" "User Manual"
.hy
.SH NAME
.PP
satAttack - A SAT attack program, developed for launching SAT attacks on
UTD\[cq]s TRAnsistor-level Programmable (TRAP) fabric.
.SH SYNOPSIS
.PP
\f[B]satAttack\f[R] [\f[I]OPTION\f[R]] plLogicFile ioCSV oracleNetlist
topLevelModule
.SH DESCRIPTION
.PP
\f[B]satAttack\f[R] runs a SAT attack on an encrypted Z3Py netlist,
using a provided oracle netlist that contains the programmed
functionality.
.SH OPTIONS
.TP
\f[B]-h\f[R], \f[B]\[en]help\f[R]
Display help message.
.TP
\f[B]-f\f[R], \f[B]\[en]fresh\f[R]
Creates fresh directories for all script outputs.
WARNING: deletes prexisting directories.
.TP
\f[B]-q\f[R], \f[B]\[en]quiet\f[R]
Stops printing of SAT attack results to terminal.
Recommended when optimizing runtime or for attacks with many keys.
.TP
\f[B]-z\f[R],
Enables the verification tool to consider outputs that may have
high-impedance functionality.
May be needed for proper attack on circuits that have tri-state outputs
or transistor-level behavior (like T-gates).
Expects HiZ variables correlating to output variables to be placed in
the ioCSV file after the \[lq]output\[rq] value.
.SH EXAMPLES
.TP
\f[B]satAttack plFile.py ioList.csv oracle.v topName -f\f[R]
Runs a SAT attack on the encrypted circuit described in plFile.py,
against the oracle \[lq]topName\[rq] described in oracle.v.
.TP
\f[B]ioList.csv formatting for N-input, M-key, P-output circuit with hiZ varaibles correlating to outputs\f[R]
.IP
.nf
\f[C]
a,input
b,input
\&...
inN,input
k1,key
k2,key 
\&...
kM,key
O,output,vO
z,output,zHiZVar
\&...
outP,output,vOutP
\f[R]
.fi
.SH AUTHORS
.PP
Written by Aric Fowler
.SH BUGS
.PP
Submit bug reports online at:
<https://github.com/aric-fowler/STRAPT/issues>
.SH SEE ALSO
.PP
Full documentation and sources at:
<https://github.com/aric-fowler/STRAPT>
