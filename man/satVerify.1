.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "SATVERIFY" "1" "February 13, 2024" "satVerify 0.1.2" "User Manual"
.hy
.SH NAME
.PP
satVerify - A SAT-based verification program, developed for verifying
programming bitstreams transistor-level circuits.
.SH SYNOPSIS
.PP
\f[B]satVerify\f[R] [\f[I]OPTION\f[R]] plEncryptedFile plFunctionFile
ioCSV keyValueCSV
.SH DESCRIPTION
.PP
\f[B]satVerify\f[R] runs bitstream verification on an unprogrammed Z3Py
netlist, using a provided oracle netlist that contains the programmed
functionality.
.SH OPTIONS
.TP
\f[B]-h\f[R], \f[B]\[en]help\f[R]
Display help message.
.TP
\f[B]-f\f[R], \f[B]\[en]fresh\f[R]
Creates fresh directories for all script outputs.
WARNING: deletes prexisting directories.
Do not use if running satVerify directly after satAttack.
.TP
\f[B]-q\f[R], \f[B]\[en]quiet\f[R]
Stops printing of results to terminal.
Recommended when optimizing runtime or for attacks with many keys.
.TP
\f[B]-z\f[R],
Enables the verification tool to consider outputs that may have
high-impedance functionality.
May be needed for proper attack on circuits that have tri-state outputs
or transistor-level behavior (like T-gates).
Expects HiZ variables correlating to output variables to be placed in
the ioCSV file after the \[lq]output\[rq] value.
.SH EXAMPLES
.TP
\f[B]satVerify -z programmablePL.py functionalPL.py ioList.csv keyVals.csv\f[R]
Runs programming functionality on the unprogrammed circuit described in
plFile.py, against the oracle \[lq]topName\[rq] described in oracle.v.
HiZ mode is active.
.TP
\f[B]ioList.csv formatting for N-input, M-key, P-output circuit with hiZ varaibles correlating to outputs\f[R]
.IP
.nf
\f[C]
a,input
b,input
\&...
inN,input
k1,key
k2,key 
\&...
kM,key
O,output,vO
z,output,zHiZVar
\&...
outP,output,vOutP
\f[R]
.fi
.TP
\f[B]keyVals.csv formatting for M-key circuit\f[R]
.IP
.nf
\f[C]
k1,True
k2,True
k3,False
\&...
kM,True
\f[R]
.fi
.SH AUTHORS
.PP
Written by Aric Fowler
.SH BUGS
.PP
Submit bug reports online at:
<https://github.com/aric-fowler/STRAPT/issues>
.SH SEE ALSO
.PP
Full documentation and sources at:
<https://github.com/aric-fowler/STRAPT>
